---

wso2am_wso2am_deployment_defaults:
  server:
    hostname: "{{ inventory_hostname }}"
    node_ip: "{{ ansible_facts.default_ipv4.address }}"
    mode: single
    base_path: ${carbon.protocol}://${carbon.host}:${carbon.management.port}
    server_role: default

  super_admin:
    username: admin
    password: admin
    create_admin_account: yes

  user_store:
    type: database_unique_id

  database:
    apim_db:
      type: h2
      url: >-
        {{ "jdbc:h2:./repository/database/WSO2AM_DB"
           + ";AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE" }}
      username: wso2carbon
      password: wso2carbon

    shared_db:
      type: h2
      url: jdbc:h2:./repository/database/WSO2SHARED_DB;DB_CLOSE_ON_EXIT=FALSE
      username: wso2carbon
      password: wso2carbon

    local:
      url: "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

  keystore:
    tls:
      file_name: wso2carbon.jks
      type: JKS
      password: wso2carbon
      alias: wso2carbon
      key_password: wso2carbon

  apim:
    gateway:
      environment:
        name: Production and Sandbox
        type: hybrid
        display_in_api_console: yes
        description: >-
          This is a hybrid gateway that handles both production and sandbox token
          traffic.
        show_as_token_endpoint_url: yes
        service_url: >-
          https://localhost:${mgt.transport.https.port}/services/
        username: ${admin.username}
        password: ${admin.password}
        ws_endpoint: ws://localhost:9099
        wss_endpoint: wss://localhost:8099
        http_endpoint: http://localhost:${http.nio.port}
        https_endpoint: https://localhost:${https.nio.port}

    cors:
      allow_origins: "*"
      allow_methods:
        - GET
        - PUT
        - POST
        - DELETE
        - PATCH
        - OPTIONS
      allow_headers:
        - authorization
        - Access-Control-Allow-Origin
        - Content-Type
        - SOAPAction
        - apikey
        - testKey
      allow_credentials: no

  event_handler:
    - name: userPostSelfRegistration
      subscriptions:
        - POST_ADD_USER

  service_provider":
    sp_name_regex: ^[\\sa-zA-Z0-9._-]*$

  event_listener:
    - id: token_revocation
      type: org.wso2.carbon.identity.core.handler.AbstractIdentityHandler
      name: org.wso2.is.notification.ApimOauthEventInterceptor
      order: 1
      properties:
        - notification_endpoint: >-
            https://localhost:${mgt.transport.https.port}/internal/data/v1/notify
          username: ${admin.username}
          password: ${admin.password}
          header.X-WSO2-KEY-MANAGER: default
